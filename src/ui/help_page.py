"""
Help page UI components for the Offenheitscrawler.
"""

import streamlit as st


class HelpPageUI:
    """UI components for the help page."""
    
    def __init__(self):
        """Initialize help page UI."""
        pass
    
    def show_help_page(self) -> None:
        """Display help page."""
        st.title("‚ÑπÔ∏è Hilfe")
        
        # Quick start guide
        self._show_quick_start()
        
        st.divider()
        
        # LLM integration guide
        self._show_llm_guide()
        
        st.divider()
        
        # CSV format guide
        self._show_csv_guide()
        
        st.divider()
        
        # Criteria catalogs
        self._show_criteria_catalogs()
        
        st.divider()
        
        # Technical details
        self._show_technical_details()
        
        st.divider()
        
        # Troubleshooting
        self._show_troubleshooting()
    
    def _show_quick_start(self) -> None:
        """Show quick start guide."""
        st.subheader("üöÄ Schnellstart")
        
        st.markdown("""
        ### So verwenden Sie den Offenheitscrawler:
        
        1. **ü§ñ KI konfigurieren** (erforderlich)
           - Gehen Sie zu **‚öôÔ∏è Einstellungen**
           - Geben Sie Ihren OpenAI API Key ein
           - Testen Sie die Verbindung
        
        2. **üìÅ CSV-Datei hochladen**
           - Laden Sie eine CSV-Datei mit Organisationen hoch
           - Format: Organisation;URL (mit oder ohne Header)
           - W√§hlen Sie aus, welche Organisationen gecrawlt werden sollen
        
        3. **‚öôÔ∏è Konfiguration anpassen**
           - W√§hlen Sie den passenden Kriterienkatalog
           - Stellen Sie die Crawling-Strategie ein
           - Passen Sie Verz√∂gerungen an
        
        4. **üöÄ Crawling starten**
           - Klicken Sie auf "Crawling starten"
           - Warten Sie auf die Fertigstellung
        
        5. **üìä Ergebnisse analysieren**
           - Betrachten Sie die Statistiken
           - Exportieren Sie die Ergebnisse als CSV oder JSON
        """)
    
    def _show_llm_guide(self) -> None:
        """Show LLM integration guide."""
        st.subheader("ü§ñ KI-Integration (Mandatory)")
        
        st.markdown("""
        ### Warum ist KI erforderlich?
        
        Der Offenheitscrawler verwendet **Large Language Models** f√ºr semantische Inhaltsanalyse:
        
        - **Semantisches Verst√§ndnis**: Erkennt Konzepte √ºber einfache Stichw√∂rter hinaus
        - **Kontextverst√§ndnis**: Versteht Bedeutung und Zusammenh√§nge
        - **H√∂here Genauigkeit**: Reduziert falsch-positive und falsch-negative Ergebnisse
        - **Mehrsprachigkeit**: Funktioniert mit verschiedenen Sprachen
        
        ### Konfiguration
        
        1. **API Key erhalten**:
           - Registrieren Sie sich bei [OpenAI](https://platform.openai.com/)
           - Erstellen Sie einen API Key
           - Oder verwenden Sie einen kompatiblen Service
        
        2. **In der App konfigurieren**:
           - Gehen Sie zu **‚öôÔ∏è Einstellungen**
           - Geben Sie den API Key ein (wird sicher gespeichert)
           - W√§hlen Sie ein Modell (Standard: gpt-4.1-mini)
           - Testen Sie die Verbindung
        
        3. **Umgebungsvariable (optional)**:
           ```bash
           export OPENAI_API_KEY="ihr-api-key"
           export OPENAI_BASE_URL="https://api.openai.com/v1"  # optional
           ```
        
        ### Unterst√ºtzte Modelle
        
        | Modell | Beschreibung | Kosten | Empfehlung |
        |--------|-------------|---------|------------|
        | **gpt-4.1-mini** | Optimiert, kosteng√ºnstig | Niedrig | ‚úÖ **Standard** |
        | gpt-4o-mini | Kosteng√ºnstig | Niedrig | Gut f√ºr Tests |
        | gpt-4o | H√∂chste Qualit√§t | Hoch | F√ºr beste Ergebnisse |
        | gpt-4-turbo | Ausgewogen | Mittel | Gute Balance |
        | gpt-3.5-turbo | Schnell | Niedrig | F√ºr einfache F√§lle |
        
        ### Kosten-Optimierung
        
        - **Max Tokens**: Standard 15.000 (anpassbar)
        - **Temperature**: 0.1 (deterministisch)
        - **Batch-Verarbeitung**: Mehrere Kriterien pro Anfrage
        - **Fallback**: Bei niedriger Konfidenz ‚Üí traditionelle Mustersuche
        """)
    
    def _show_csv_guide(self) -> None:
        """Show CSV format guide."""
        st.subheader("üìÅ CSV-Format")
        
        st.markdown("""
        ### Flexible CSV-Unterst√ºtzung
        
        Der Offenheitscrawler unterst√ºtzt CSV-Dateien **mit und ohne Header**:
        
        #### Format 1: Mit Header (empfohlen)
        ```csv
        Organisation;URL
        Universit√§t Hamburg;https://www.uni-hamburg.de
        TU M√ºnchen;https://www.tum.de
        ```
        
        #### Format 2: Ohne Header
        ```csv
        Universit√§t Hamburg;https://www.uni-hamburg.de
        TU M√ºnchen;https://www.tum.de
        ```
        
        ### Wichtige Hinweise
        
        - **Trennzeichen**: Semikolon (;) bevorzugt, Komma (,) auch m√∂glich
        - **Spalten**: Erste Spalte = Organisation, zweite Spalte = URL
        - **Zus√§tzliche Spalten**: Werden ignoriert (nur erste zwei werden verwendet)
        - **Automatische Erkennung**: Header werden automatisch erkannt
        - **URLs**: M√ºssen vollst√§ndig sein (mit http:// oder https://)
        
        ### Organisationsauswahl
        
        Nach dem Upload k√∂nnen Sie w√§hlen:
        
        - **Alle Organisationen**: Verarbeitet die gesamte CSV-Datei
        - **Bereich (Zeile X-Y)**: z.B. Zeile 5 bis 15 f√ºr Tests
        - **Einzelne Organisation**: W√§hlen Sie eine spezifische Organisation
        
        ### Beispiel-Dateien
        
        Laden Sie Beispiel-CSV-Dateien aus dem Projekt-Repository herunter.
        """)
    
    def _show_criteria_catalogs(self) -> None:
        """Show information about criteria catalogs."""
        st.subheader("üìã Kriterienkataloge")
        
        st.markdown("""
        ### Verf√ºgbare Kataloge
        
        Der Offenheitscrawler enth√§lt spezialisierte Kriterienkataloge f√ºr verschiedene Organisationstypen:
        
        #### üéì Hochschulen
        - Finanzielle Transparenz (Jahresberichte, Haushalte)
        - Forschungsdaten-Offenheit
        - Lehrmaterial-Zug√§nglichkeit
        - Governance und Entscheidungsprozesse
        
        #### üè´ Bildungseinrichtungen
        - Transparenz der Bildungsangebote
        - Zug√§nglichkeit von Lernmaterialien
        - Offene Kommunikation mit Stakeholdern
        - Partizipationsm√∂glichkeiten
        
        #### üé≠ Kultureinrichtungen
        - Programmtransparenz
        - Zug√§nglichkeit und Barrierefreiheit
        - Community-Engagement
        - Digitale Pr√§senz und Offenheit
        
        #### üî¨ Forschungseinrichtungen
        - Open Science Praktiken
        - Datenver√∂ffentlichung
        - Kollaborationsoffenheit
        - Transparenz der Forschungsagenda
        
        #### üì∫ √ñffentlich-rechtlicher Rundfunk
        - Programm-Transparenz
        - Finanzielle Offenlegung
        - B√ºrgerbeteiligung
        - Medienvielfalt und Zug√§nglichkeit
        
        ### Kriterien-Struktur
        
        Jeder Katalog ist hierarchisch strukturiert:
        
        ```
        Katalog
        ‚îú‚îÄ‚îÄ Dimensionen (z.B. "Transparenz")
        ‚îÇ   ‚îú‚îÄ‚îÄ Faktoren (z.B. "Finanzielle Transparenz")
        ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Kriterien (z.B. "Jahresbericht verf√ºgbar")
        ```
        
        ### Bewertung
        
        - **Bin√§r**: Kriterium erf√ºllt (‚úÖ) oder nicht erf√ºllt (‚ùå)
        - **Konfidenz**: 0.0 - 1.0 (Sicherheit der KI-Bewertung)
        - **Begr√ºndung**: Textuelle Erkl√§rung der Bewertung
        - **Quelle**: URL der Seite, auf der das Kriterium gefunden wurde
        """)
    
    def _show_technical_details(self) -> None:
        """Show technical details."""
        st.subheader("üîß Technische Details")
        
        st.markdown("""
        ### Crawling-Strategien
        
        #### üöÄ Schnell (4 Seiten)
        - Startseite + 3 wichtigste Seiten
        - Heuristische Auswahl basierend auf URL-Mustern
        - Schnellste Option f√ºr √úberblick
        
        #### ‚öñÔ∏è Standard (5-10 Seiten)
        - KI-basierte Auswahl der relevantesten Seiten
        - Analysiert alle gefundenen Links
        - W√§hlt die vielversprechendsten f√ºr Offenheitskriterien
        
        #### üîç Gr√ºndlich (bis 15 Seiten)
        - Alle relevanten internen Seiten
        - Umfassendste Analyse
        - L√§ngste Laufzeit
        
        ### Verz√∂gerungsmanagement
        
        #### Intra-Domain-Delay
        - Pause zwischen Seiten **derselben Website**
        - Standard: 2 Sekunden
        - Respektiert Server-Last und robots.txt
        
        #### Inter-Domain-Delay
        - Pause zwischen **verschiedenen Organisationen**
        - Standard: 0.5 Sekunden
        - Minimiert Gesamtlaufzeit
        
        ### Technologie-Stack
        
        - **Web-Crawling**: crawl4ai + aiohttp
        - **KI-Integration**: OpenAI-kompatible APIs
        - **UI**: Streamlit
        - **Datenverarbeitung**: pandas
        - **Visualisierung**: plotly
        - **Logging**: loguru
        - **Konfiguration**: YAML
        
        ### Performance
        
        - **Parallel-Verarbeitung**: Bis zu 3 gleichzeitige Anfragen
        - **Timeout**: 30 Sekunden pro Seite
        - **Retry-Logik**: Automatische Wiederholung bei Fehlern
        - **Caching**: Vermeidet doppelte Anfragen
        """)
    
    def _show_troubleshooting(self) -> None:
        """Show troubleshooting guide."""
        st.subheader("üîß Probleml√∂sung")
        
        st.markdown("""
        ### H√§ufige Probleme
        
        #### ‚ùå "KI-Integration erforderlich"
        **Problem**: OpenAI API Key nicht konfiguriert
        
        **L√∂sung**:
        1. Gehen Sie zu ‚öôÔ∏è Einstellungen
        2. Geben Sie einen g√ºltigen API Key ein
        3. Testen Sie die Verbindung
        4. Speichern Sie die Konfiguration
        
        #### ‚ùå "CSV-Datei kann nicht geladen werden"
        **Problem**: Ung√ºltiges CSV-Format
        
        **L√∂sung**:
        - √úberpr√ºfen Sie das Trennzeichen (Semikolon bevorzugt)
        - Stellen Sie sicher, dass URLs vollst√§ndig sind
        - Verwenden Sie UTF-8 Kodierung
        - Mindestens zwei Spalten erforderlich
        
        #### ‚ùå "Crawling fehlgeschlagen"
        **Problem**: Website nicht erreichbar oder blockiert
        
        **L√∂sung**:
        - √úberpr√ºfen Sie die URL-Korrektheit
        - Pr√ºfen Sie Ihre Internetverbindung
        - Erh√∂hen Sie das Timeout in den Einstellungen
        - Reduzieren Sie parallele Anfragen
        
        #### ‚ùå "Niedrige Erfolgsrate"
        **Problem**: Viele Websites blockieren den Crawler
        
        **L√∂sung**:
        - Erh√∂hen Sie die Verz√∂gerungen
        - Aktivieren Sie robots.txt-Respekt
        - Verwenden Sie weniger parallele Anfragen
        - Pr√ºfen Sie die User-Agent-Einstellungen
        
        ### Performance-Optimierung
        
        #### F√ºr schnellere Ergebnisse:
        - Verwenden Sie "Schnell"-Strategie
        - Reduzieren Sie Max Tokens (5.000-10.000)
        - W√§hlen Sie gpt-4o-mini oder gpt-3.5-turbo
        - Begrenzen Sie die Organisationsauswahl
        
        #### F√ºr bessere Qualit√§t:
        - Verwenden Sie "Gr√ºndlich"-Strategie
        - Erh√∂hen Sie Max Tokens (15.000-20.000)
        - W√§hlen Sie gpt-4o oder gpt-4-turbo
        - Senken Sie den Konfidenz-Schwellenwert
        
        ### Support
        
        Bei weiteren Problemen:
        
        1. **Logs pr√ºfen**: Schauen Sie in die Konsole/Terminal-Ausgabe
        2. **Einstellungen zur√ºcksetzen**: Verwenden Sie "Auf Standardwerte zur√ºcksetzen"
        3. **Browser-Cache leeren**: Aktualisieren Sie die Streamlit-App
        4. **Dokumentation**: Lesen Sie die README-Dateien im Projekt
        
        ### Systemanforderungen
        
        - **Python**: 3.8 oder h√∂her
        - **RAM**: Mindestens 4 GB (8 GB empfohlen)
        - **Internet**: Stabile Verbindung erforderlich
        - **API-Limits**: Beachten Sie OpenAI Rate Limits
        """)
        
        # Contact information
        st.info("""
        üí° **Tipp**: Starten Sie mit einer kleinen Auswahl von Organisationen (5-10), 
        um die Konfiguration zu testen, bevor Sie gro√üe Datens√§tze verarbeiten.
        """)
